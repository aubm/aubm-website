<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aubm</title>
    <link>https://www.aubm.net/</link>
    <description>Recent content on Aubm</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 09 May 2020 18:00:07 +0200</lastBuildDate>
    
	<atom:link href="https://www.aubm.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Extending the Kubernetes API</title>
      <link>https://www.aubm.net/posts/extending-the-kubernetes-api/</link>
      <pubDate>Sat, 09 May 2020 18:00:07 +0200</pubDate>
      
      <guid>https://www.aubm.net/posts/extending-the-kubernetes-api/</guid>
      <description>Kubernetes offers various ways to add custom functionalities and to modify the way built-in features work. Today I want to talk about extending Kubernetes by using custom resources and controllers. Let&amp;rsquo;s take a close look at how to do that, but first a quick story!
Why extending Kubernetes As I mentioned in my previous post, my journey on the cloud began with Google App Engine. As a developer, I was pretty happy with the path to production of the service.</description>
    </item>
    
    <item>
      <title>The Certified Kubernetes Application Developer and Administrator Certifications</title>
      <link>https://www.aubm.net/posts/the-certified-kubernetes-application-developer-and-administrator-certifications/</link>
      <pubDate>Sun, 26 Apr 2020 15:00:07 +0200</pubDate>
      
      <guid>https://www.aubm.net/posts/the-certified-kubernetes-application-developer-and-administrator-certifications/</guid>
      <description>After a few years of daily work with Kubernetes, I decided to become a Certified Kubernetes Application Developer (CKAD) as well as a Certified Kubernetes Administrator (CKA). As I&amp;rsquo;ve just taken and successfully passed the exams, I figured this was a good opportunity for a story.
My background experience My first steps with Kubernetes go back a few years ago, when I began experiencing on Google Cloud Platform and was amazed by how easy and fun it was to deploy applications on Google App Engine.</description>
    </item>
    
    <item>
      <title>The Case of a Git Linear History</title>
      <link>https://www.aubm.net/posts/the-case-of-a-git-linear-history/</link>
      <pubDate>Thu, 02 Apr 2020 22:00:00 +0100</pubDate>
      
      <guid>https://www.aubm.net/posts/the-case-of-a-git-linear-history/</guid>
      <description>I recently left a team where I was the lead developer for about three years. I was regularly asked about why I wanted to keep the history of the git repository linear. Most of the time (but not always), the question came from fellow developers having a hard time rebasing a work branch.
As a matter of fact, the question was also asked multiple times on StackOverflow, especially as What are advantages of keeping linear history in git or Git workflow and rebase vs merge questions.</description>
    </item>
    
    <item>
      <title>Being the Best Is Not Enough</title>
      <link>https://www.aubm.net/posts/being-the-best-is-not-enough/</link>
      <pubDate>Sat, 21 Mar 2020 09:40:36 +0100</pubDate>
      
      <guid>https://www.aubm.net/posts/being-the-best-is-not-enough/</guid>
      <description>Being the best, meaning having the best technical skills. It is not a rare thing for me to meet with someone, typically a fellow developer, who will give me the impression that having figured it all out about a technology is what makes you the best match for working on a particular project.
I believe this statement is wrong and it may sound straightforward to say. But identifying what we are missing when we think like that is a bit less obvious.</description>
    </item>
    
    <item>
      <title>How to Better Promote Your Bad Ideas</title>
      <link>https://www.aubm.net/posts/how-to-better-promote-your-bad-ideas/</link>
      <pubDate>Fri, 03 Jan 2020 00:38:00 +0100</pubDate>
      
      <guid>https://www.aubm.net/posts/how-to-better-promote-your-bad-ideas/</guid>
      <description>Ever found yourself in a situation where you had to promote an idea that you thought it was brilliant, but your co-workers did not?
We don&amp;rsquo;t always have good ideas, sometimes we poorly elaborate our instincts, and whatever we come up with doesn&amp;rsquo;t pass the test of the evaluation by our pairs. If your colleagues have presented robust and logical arguments, then it&amp;rsquo;s hard to defend your idea further.
The thing is, if you really care about these ideas, then it is really a shame that it would only take a solid and well established argumentation for them to be rejected.</description>
    </item>
    
  </channel>
</rss>